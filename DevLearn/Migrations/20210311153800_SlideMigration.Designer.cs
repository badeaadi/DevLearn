// <auto-generated />
using System;
using DevLearn.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace TestsData.Migrations
{
    [DbContext(typeof(TestsDataContext))]
    [Migration("20210311153800_SlideMigration")]
    partial class SlideMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DevLearn.Models.Author", b =>
                {
                    b.Property<int>("IdAuthor")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdAuthor")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName");

                    b.HasKey("IdAuthor");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("DevLearn.Models.Lecture", b =>
                {
                    b.Property<int>("IdLecture")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<int>("AuthorIdAuthor");

                    b.Property<string>("LectureTitle");

                    b.HasKey("IdLecture");

                    b.HasIndex("AuthorIdAuthor");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("DevLearn.Models.Problem", b =>
                {
                    b.Property<int>("IdProblem")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Dificultate");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int?>("ProblemLectureIdLecture");

                    b.HasKey("IdProblem");

                    b.HasIndex("ProblemLectureIdLecture");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("DevLearn.Models.Pupil", b =>
                {
                    b.Property<int>("IdPupil")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int>("SolvedProblems");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("IdPupil");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Pupils");
                });

            modelBuilder.Entity("DevLearn.Models.Slide", b =>
                {
                    b.Property<int>("IdSlide")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("LectureIdLecture");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("IdSlide");

                    b.HasIndex("LectureIdLecture");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("DevLearn.Models.Lecture", b =>
                {
                    b.HasOne("DevLearn.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorIdAuthor")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DevLearn.Models.Problem", b =>
                {
                    b.HasOne("DevLearn.Models.Lecture", "ProblemLecture")
                        .WithMany("Problems")
                        .HasForeignKey("ProblemLectureIdLecture");
                });

            modelBuilder.Entity("DevLearn.Models.Slide", b =>
                {
                    b.HasOne("DevLearn.Models.Lecture")
                        .WithMany("Slides")
                        .HasForeignKey("LectureIdLecture")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
