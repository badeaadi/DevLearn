[{"/Users/alexandruenache/repo/ClientApp/src/index.js":"1","/Users/alexandruenache/repo/ClientApp/src/reportWebVitals.js":"2","/Users/alexandruenache/repo/ClientApp/src/App.js":"3","/Users/alexandruenache/repo/ClientApp/src/Routes.jsx":"4","/Users/alexandruenache/repo/ClientApp/src/components/index.js":"5","/Users/alexandruenache/repo/ClientApp/src/components/Home/Home.jsx":"6","/Users/alexandruenache/repo/ClientApp/src/components/NotFound/NotFound.jsx":"7","/Users/alexandruenache/repo/ClientApp/src/components/LogIn/LogIn.jsx":"8","/Users/alexandruenache/repo/ClientApp/src/components/Lectures/Lectures.jsx":"9","/Users/alexandruenache/repo/ClientApp/src/components/Register/Register.jsx":"10","/Users/alexandruenache/repo/ClientApp/src/config.js":"11","/Users/alexandruenache/repo/ClientApp/src/components/OpenedLecture/OpenedLecture.jsx":"12"},{"size":589,"mtime":1615476110928,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1615476110928,"results":"15","hashOfConfig":"14"},{"size":5520,"mtime":1618070194277,"results":"16","hashOfConfig":"14"},{"size":929,"mtime":1618067831132,"results":"17","hashOfConfig":"14"},{"size":274,"mtime":1615582444526,"results":"18","hashOfConfig":"14"},{"size":399,"mtime":1615476110925,"results":"19","hashOfConfig":"14"},{"size":290,"mtime":1615476110927,"results":"20","hashOfConfig":"14"},{"size":1300,"mtime":1618067798368,"results":"21","hashOfConfig":"14"},{"size":4718,"mtime":1618067849456,"results":"22","hashOfConfig":"14"},{"size":1527,"mtime":1618067798370,"results":"23","hashOfConfig":"14"},{"size":69,"mtime":1615582655212,"results":"24","hashOfConfig":"14"},{"size":3143,"mtime":1618067908280,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1qxcdga",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/alexandruenache/repo/ClientApp/src/index.js",[],["53","54"],"/Users/alexandruenache/repo/ClientApp/src/reportWebVitals.js",[],"/Users/alexandruenache/repo/ClientApp/src/App.js",["55","56","57","58"],"/Users/alexandruenache/repo/ClientApp/src/Routes.jsx",[],"/Users/alexandruenache/repo/ClientApp/src/components/index.js",[],"/Users/alexandruenache/repo/ClientApp/src/components/Home/Home.jsx",[],"/Users/alexandruenache/repo/ClientApp/src/components/NotFound/NotFound.jsx",[],"/Users/alexandruenache/repo/ClientApp/src/components/LogIn/LogIn.jsx",[],"/Users/alexandruenache/repo/ClientApp/src/components/Lectures/Lectures.jsx",["59","60"],"import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { useEffect, useState } from \"react\";\nimport \"./Lectures.css\";\nimport Button from \"react-bootstrap/Button\";\nimport { Form } from \"react-bootstrap\";\nimport adminUser from '../../config';\nimport OpenedLecture from '../OpenedLecture/OpenedLecture'\n\nconst Lectures = ({ lectures, postLecture, postSlides, user, deleteLecture, deleteSlide }) => {\n\n  const [slideDescription, setSlideDescription] = useState(\"\");\n  const [slideTitle, setSlideTitle] = useState(\"\");\n  const [lectureTitle, setLectureTitle] = useState(\"\")\n\n  const [openedLecture, setOpenedLecture] = useState(-1);\n  const [currentSlide, setCurrentSlide] = useState(-1);\n\n  let groups = [];\n\n  useEffect(() => {\n    for(let i = 0; i < lectures.length; i+=5) {\n      groups.push(lectures.slice(i, i + 5));\n    }\n    console.log(groups)\n    console.log(lectures)\n  }, []);\n\n  const openLecture = (id) => {\n    setOpenedLecture(id);\n    setCurrentSlide(0);\n  };\n\n  const closeLecture = () => {\n    setOpenedLecture(-1);\n  }\n\n  const submitSlideHandler = (e) => {\n    e.preventDefault();\n    postSlides(lectures[openedLecture].idLecture, slideTitle, slideDescription);\n  }\n\n  const submitLectureHandler = (e) => {\n    e.preventDefault();\n    postLecture(lectureTitle);\n  }\n\n  const validateForm = () => {\n    return slideDescription.length > 0 && slideTitle.length > 0;\n  }\n\n  const submitDeleteLecture = (lectureId) => {\n    deleteLecture(lectureId)\n  }\n\n  return (\n    <div className=\"lectures\">\n      {openedLecture === -1 ? (\n          <div className=\"all-lectures\">\n            <Card style={{ width: \"18rem\" }}>\n              <Card.Header>Lectures</Card.Header>\n              <ListGroup variant=\"flush\">\n                {\n                  lectures.map((lecture, index) => (\n                      <ListGroup.Item\n                          action\n                          onClick={() => {\n                            openLecture(index);\n                          }}\n                      >\n                        {lecture.lectureTitle}\n                        {\n                          (user.username === adminUser.username && user.password === adminUser.password) ? (\n                              <Button variant=\"outline-danger\"\n                              onClick={() => {\n                                submitDeleteLecture(lecture.idLecture)\n                              }}>X</Button>\n                          ) : \"\"\n                        }\n                      </ListGroup.Item>\n                  ))\n                }\n              </ListGroup>\n            </Card>\n          </div>,\n        (user.username === adminUser.username && user.password === adminUser.password) ? (\n            <Form onSubmit={submitLectureHandler}>\n              <Form.Group size=\"lg\" controlId=\"username\">\n                <Form.Label>Lecture Title</Form.Label>\n                <Form.Control\n                    autoFocus\n                    type=\"title\"\n                    value={lectureTitle}\n                    onChange={(e) => setLectureTitle(e.target.value)}\n                />\n              </Form.Group>\n\n              <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                Add Lecture\n              </Button>\n            </Form>\n        ) : \"\"\n      ) : (\n          lectures[openedLecture].slides.length !== 0 ? (\n            <div>\n              <OpenedLecture currentLecture = {lectures[openedLecture]} postSlides={postSlides} />\n              <Button onClick={closeLecture}>\n                Go back\n              </Button>\n            </div>\n          ) : (\n            <div>\n              <Form onSubmit={submitSlideHandler}>\n                <Form.Group size=\"lg\" controlId=\"username\">\n                  <Form.Label>Title</Form.Label>\n                  <Form.Control\n                      autoFocus\n                      type=\"title\"\n                      value={slideTitle}\n                      onChange={(e) => setSlideTitle(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group size=\"lg\" controlId=\"password\">\n                  <Form.Label>Description</Form.Label>\n                  <Form.Control\n                      type=\"description\"\n                      value={slideDescription}\n                      onChange={(e) => setSlideDescription(e.target.value)}\n                  />\n                </Form.Group>\n\n                <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n                  Add Slide\n                </Button>\n              </Form>\n            </div>\n          )\n      )}\n    </div>\n  );\n}\n\nexport default Lectures\n","/Users/alexandruenache/repo/ClientApp/src/components/Register/Register.jsx",[],"/Users/alexandruenache/repo/ClientApp/src/config.js",["61"],"const adminUser = {\n    username: \"admin\",\n    password: \"adiadmin\"\n}","/Users/alexandruenache/repo/ClientApp/src/components/OpenedLecture/OpenedLecture.jsx",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":15,"column":10,"nodeType":"68","messageId":"69","endLine":15,"endColumn":14},{"ruleId":"66","severity":1,"message":"70","line":15,"column":16,"nodeType":"68","messageId":"69","endLine":15,"endColumn":23},{"ruleId":"71","severity":1,"message":"72","line":22,"column":13,"nodeType":"73","endLine":30,"endColumn":4},{"ruleId":"71","severity":1,"message":"74","line":30,"column":6,"nodeType":"75","endLine":30,"endColumn":8,"suggestions":"76"},{"ruleId":"66","severity":1,"message":"77","line":18,"column":10,"nodeType":"68","messageId":"69","endLine":18,"endColumn":22},{"ruleId":"71","severity":1,"message":"78","line":28,"column":6,"nodeType":"75","endLine":28,"endColumn":8,"suggestions":"79"},{"ruleId":"66","severity":1,"message":"80","line":1,"column":7,"nodeType":"68","messageId":"69","endLine":1,"endColumn":16},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'test' is assigned a value but never used.","Identifier","unusedVar","'setTest' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'lectures'. Either include it or remove the dependency array.","ArrayExpression",["83"],"'currentSlide' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'groups' and 'lectures'. Either include them or remove the dependency array.",["84"],"'adminUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [lectures]",{"range":"89","text":"90"},"Update the dependencies array to be: [groups, lectures]",{"range":"91","text":"92"},[965,967],"[lectures]",[950,952],"[groups, lectures]"]